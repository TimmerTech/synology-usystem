#!/usr/bin/env bash

# bash strict mode
set -T # inherit DEBUG and RETURN trap for functions
set -C # prevent file overwrite by > &> <>
set -E # inherit -e
set -e # exit immediately on errors
set -u # exit on not assigned variables
set -o pipefail # exit on pipe failure


################################################################################
# check for needed commands
################################################################################
function import() {
    declare -r cmd_name=$1;

    if ! which "$cmd_name" > /dev/null 2>&1; then
        echo "$cmd_name" not found.
        echo Make sure you have installed it.
        echo install "$cmd_name" from here:
        case $cmd_name in
            yq )
                echo 'https://github.com/mikefarah/yq';
            ;;
            * )
                echo 'your OS repository or search the Internet';
            ;;
        esac
        exit 1;
    fi
}

import echo
import printf

################################################################################
# global variable
################################################################################
declare -r CLI_VERSION='1.0.0';
declare -r CLI_NAME='usystem';
declare -r PS4='debug($LINENO) ${FUNCNAME[0]:+${FUNCNAME[0]}}(): ';
declare -r USYSTEM_DIR=/volume1/@usystem/usystem


################################################################################
# functions
################################################################################
function repair_help() {
    echo $CLI_NAME repair
    echo
    echo Description:
    printf "%-4s%s\n" "" "Repair usystem, used after DSM upgrade or update."
    printf "%-4s%s\n" "" "This will mount and relink usystem to your Synology"
    exit 0
}

function repair() {
    while [ ${#} -gt 0 ]; do
        case $1 in
            -h | --help | help )
                repair_help
            ;;
        esac
    done

    printf "%-32s " "Repairing rc.usystem ..."
    if cp "${USYSTEM_DIR}/etc.defaults/rc.usystem" /etc; then
        printf '[OK]\n'
    else
        printf '[FAILED]\n'
        exit 1
    fi

    printf "%-32s " "REpairing rc.local ..."
    if cp "${USYSTEM_DIR}/etc.defaults/rc.local" /etc; then
        printf '[OK]\n'
    else
        printf '[FAILED]\n'
        exit 1
    fi

    exit 0;
}

function main_help() {
    echo $CLI_NAME $CLI_VERSION
    echo
    echo Usage:
    printf "%-4s%s\n" "" "$CLI_NAME command [options]"
    printf "%-4s%s\n" "" "$CLI_NAME command help"
    echo
    echo Global:
    printf "%-4s%-23s %s\n" "" "help" "show help";
    printf "%-4s%-23s %s\n" "" "version" "show version";
    echo
    echo Commands:
    printf "%-4s%-23s %s\n" "" "repair" "Repair usystem";

    exit "${1:-0}";
}

function version() {
    echo $CLI_NAME $CLI_VERSION;
    exit 0
}

function main() {
    if (( ${#} == 0 )); then
        main_help 0;
    fi

    case ${1} in
        help | version | repair )
            $1 "${@:2}";
        ;;
        * )
            echo "unknown command: $1";
            main_help 1;
        ;;
    esac
}

main "$@";
