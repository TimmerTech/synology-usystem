#!/usr/bin/env bash
# shellcheck disable=SC3040,SC3041
#===============================================================================
# WARNING: DO NOT EXIT
#
# IF YOU NEED ADDITONAL CHANGES BEYOND PLEASE SUBMIT A MERGE REQUEST.
# THIS FILE MIGHT BE OVERRIDEN WHEN YOU UPDATE USYSTEM.
#
# URL: https://github.com/timmertech/synology-usystem
#
# If you need additional Run Commands; place your own run commands in
# ${USYS_BIND_DIR}/etc/rc.d and they will automatically be loaded.
#
#===============================================================================
# bash strict mode
set -T # inherit DEBUG and RETURN trap for functions
set -C # prevent file overwrite by > &> <>
set -E # inherit -e
set -e # exit immediately on errors
set -u # exit on not assigned variables
set -o pipefail # exit on pipe failure


#===============================================================================
# USYSTEM Global Variables
#===============================================================================
+++INSTALL_VARS+++


#===============================================================================
# USYSTEM RC Functions
#===============================================================================
function umount_usystem() {
    # unmount ${USYS_BIND_DIR}/tmp
    if grep " ${USYS_TMP_DIR} " /proc/mounts > /dev/null 2>&1; then
        echo "unmounting: ${USYS_TMP_DIR}"
        umount "${USYS_TMP_DIR}"
    fi

    # umount ${USYS_BIND_DIR}
    if grep " ${USYS_BIND_DIR} " /proc/mounts > /dev/null 2>&1; then
        echo "unmounting: ${USYS_BIND_DIR}"
        umount "${USYS_BIND_DIR}"
    fi

    return 0
}

function mount_usystem() {
    if ! grep " ${USYS_BIND_DIR} " /proc/mounts > /dev/null 2>&1; then
        # Mount user system
        if [ ! -d "${USYS_BIND_DIR}" ]; then
            mkdir -p "${USYS_BIND_DIR}"
            chmod 775 "${USYS_BIND_DIR}"
            chown root:administrators "${USYS_BIND_DIR}"
        fi
        echo "mounting: ${USYS_BIND_DIR}"
        mount -o bind "${USYS_ROOT}" "${USYS_BIND_DIR}"
    fi

    if ! grep " ${USYS_TMP_DIR} " /proc/mounts > /dev/null 2>&1; then
        # Mount tmpfs to usys, so that we do not clutter the OS
        # and there is only a single tmpfs in use
        if [ ! -d "${USYS_TMP_DIR}" ]; then
            mkdir -p "${USYS_TMP_DIR}"
        fi
        echo "mounting: ${USYS_BIND_DIR}/tmp"
        mount -o bind /tmp "${USYS_TMP_DIR}"
    fi
}

function link_profile() {
    # Add usystem profile to environment
    if grep -qF ". ${USYS_BIND_DIR}/etc/profile" /etc/profile; then
        echo "Synology User System: Enabled"
    else
        echo "Synology User System: Updating; /etc/profile"
cat >> /etc/profile <<"EOF"

# Loading Synology User System
if [ -r {USYS_BIND_DIR}/etc/profile ] && bash -n {USYS_BIND_DIR}/etc/profile; then
    . {USYS_BIND_DIR}/etc/profile
fi
EOF

    sed -i "s|{USYS_BIND_DIR}|${USYS_BIND_DIR}|g" /etc/profile

    fi
}


#===============================================================================
# USYSTEM RC MAIN
#===============================================================================
case "$1" in
    start)
        echo "Starting usystem"
        if test -n "${USYS_ROOT}"; then
            mount_usystem
            link_profile
        fi
    ;;
    reconfig)
        true
    ;;
    stop)
        echo "Shutting down usystem"
        umount_usystem
        true
    ;;
    *)
        echo "usage: $0 {start|stop|reconfig}"
        exit 1
    ;;
esac

exit 0
